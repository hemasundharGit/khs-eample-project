when we use teraform 
lets say a company needs 50 servers u created in a short time developer created it using Aws Cloud Fromation Templates(Aws CAF) but after a period of time they think they need to move to the Azure then u need to transfer all the 50 servers to the Azure using azure resource manager(rm)
Then the developer Automated  all the servers form Aws to Azure in a normal manner but the problem is the now needs to move to on-premises we can do that using "Heat templates" this is one scenario   here is takes lots of time to do that 

Second Scernario is  we gone to hybrid cloud aws and then automated to azure and then to on-permises to overcome these and to compelete the task in a more efficent way it is using  "Terraform" 


Terraform is "Api As a Code"

hashicorp terraform coorporation 

sudo apt=get update,sude apt-get install -y gnupgsoftare-properties-common


lets say first u need to go throught the documentation of the terrform by haschicorp u need to remember all the things because there are more than 200 services in aws so when ever the interviwer asks this just say i am going through the documentation that is provided by haschicorp to perform all these kind of operations 

lets say create a vm in the ec2 and then i created ubuntu machine then i connected to it then install terraform into it by using  "sudo apt=get update,sude apt-get install -y gnupgsoftare-properties-common"
   and then create a folder and in that create two sub-folders whenever we are working on terraform we have these both states to update the mnain.tf terraform when we chage the 50 server form aws to azure or some other flatfrom then these folders comes into a place 

then in local create main.tf in that paste the code that is provided by the terraform documenatation and then do "terraform init"   this will intialize the terraform script and then "terraform apply"  then it will execute the code and then the acoording the written code in the code if u written to create ec2 then the ec2 will be created 

main.tf :--
terraform {
  required_providers {
    aws = {
      source  = "hashicorp/aws"
      version = "~> 5.0"
    }
  }
}

# Configure the AWS Provider
provider "aws" {
  region = "us-east-1"
}

# Create a VPC
resource "aws_vpc" "example" {
  cidr_block = "10.0.0.0/16"
}



terraform init
  terraform plan 
     terraform apply
        terraform destroy

for additional information about the output.tf and variables.tf go through the 
   "https://github.com/futurice/terraform-examples/blob/master/aws/aws_lambda_api/main.tf"


now lets had a question like what is output.tf and variables.tf 
  output.tf in thg=ese we will write about what we are creating through the terraform script that is "main.tf"
  varibles.tf in these we will take all the variables and we will link it through the main.tf without writing dirctly into main.tf 






