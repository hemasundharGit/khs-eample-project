Its a culture adopting in your orgainization that would incerease or improves ability to delivery their applications

devops AS  a CI/CD continous integration continous delivery 
improving delivery by ensuring that the following steps 
automation
quality
monitoring
testing

----->devops is a process of improving the apppliction delivery by ensuring that there is proper autmation in place quality that maintained continious monitoring
and finally there is continious testing  in place "final goal is to fasten the application delivery"

why devops?
 
----> To improve the process of delivery to overcome the multiple teams like system admin,build and release engineer,server admin 
----> 

hypervisior  physical server logical server cloud 


letus consider aws if i need to create a  vm that is using ec2 so for 1 time its okay if i need to create fo 100 times then we will using api 
which consists of script that make call or communcation with the aws dashboard without opening it   the script will be return by devops engineer
or sys admin to communicate with api we need to write a script that is aws cli or aws api(boto3) teraform or aws cft by doing this we had reached efficiency 
and achived devops startegy   ec-2 and teraform  based on iaas and aws has (AWS CDK)    
 
the oragnazation opting hybrid cloud we will use terraform 

commands inn shell scripting

df -h for disk space

free -g for memory

nproc 

set -x to represnt the commands used during the output that when we are executed in place of echo 
ps -ef says that what are the processes running on the current machine 
if i need the id of a certaion process trhenb i will use 
ps -ef | grep "amazon"
it returns all the amazon process running on the amazon 

./test.sh | grep 1

date | echo "date is"
pipe is used to link two commands but here date commands sends to std in so pipe doesnot pipe will not recive the output from std in


if a manager asks dont give me the entire information of the amazon but give me about single sort so we will use 

command is awk 

how to use awk command 
ps -ef | grep amazon |awk -F" " '{print $3}'


set -e it will be terminated when there is a error

at it will not work on the pipe command errors
if we need to rectify that error 
set v-o pipefail


curl retrives displays the information present in the log files 

example curll https://github.com/logpai/loghub/blob/master/Android/Android_2k.log | grep ERROR it will display the error present in the log file 

wget will download  after download we will get the log file but curl just displays the log file without downloading 


shell scripting project with github integartion 
There are Two ways to talk to applications 
1. Api
2. Cli

to access through th eapplication we use 
curl or
grpc           using http



git and github 
svn
cvs
git

what is the differnce between centralized and distriibuted version 
control system

to create a public or a private key in linux we use command :
              ssh-keygen -t rsa          

for creating a branch
git checkout -b "branch-name"

git branch

to leave from the main branch we use the following command 
git checkout main 


to merge the branches
git merge
git rebase
git cherry-pick


git cherry-pick : we are picking the commits 
git cherry-pick  "commit id" from the brach "git log division"
cherry-pick is used for one or two commits 

if a organization has 60000 commits we use "git merge" or "git rebase"

differnce between git  rebase and git merge is if we need to do in linear way we need to use git-rebase
we need to in non-linear way we use git-merge

hoisting my first nodejs application in aws ec2=elastic compute cloud its a kind of virtual cloud in which we use in organizations for increase the rate of workflow with minimum costs we will learn it in future 

Aws services  used in Devops 
EC2-elastic compute cloud
VPC-virtual private cloud for securing EC2 with security rules,cidr,inbound and outbound rules
EBS(volume)
S3(storage) is default encrypted
IAM(identity and access mangement to give personalized access for employees in organization)
cloud watch(monitoring)
lambda serverless

cloud build services that are  cicd on aws
aws code pipe line
aws code build
aws code deploy

AWS configuration services

AWS Billing and costing

Aws "kms(Key amangement service)" for sercurity for all the services examplke like certificate rotations

cloud trail "information and logs and we will get api activity"

AWS EKS ( Elastic Kubernetis Service )

Fargate,ECS

EKS VS ECS
both are container orakaestic solution 
EKS is managed kubernetis service
ECS aws built by its own 

Elk (Elastic log Serach)


configuration management
let us take a system admin and an on permises server if i need to update all these 50 servers
upgrades
secure patents
installation

in old days we use scripts for handling this but it becomes complex so to overcome these  
they moved to cloud the problem becomed very bigger because they created 10x greather than before 
the concept is configuration management 
tools like
puppet
chef
ansible
salt 

but ansible became popular most people use ansible in devops journey 


puppet
pull mechanism model
master slave architecture
master is master branch and instances take it as slaves 
puppet language



ansible
push mechanism model
agent less model 
password less autentication
inventory file
dynamic inventory
windows,linux
simple(yaml)language 
we can write own ansible modules
ansible galaxy we can share the modules with others

ansible uses python
supports both windows "winrm"
linux "ssh"

Disadvantages:
windows has little problem with ansible
ansible not good with debugging
ansible performance is some what slow

managing ec2 instance using ansible 
push mechanism 
i will write a script i will push that script at a tome into two instances so at a time upadte will be possible through ansible in that i am using in windows

its easy to install ansible in linux because linux provides the correct environment better than windows or some x platforms 
to install ansible the command is sudo apt install ansible 

in ansible we are doing password less authentication so for that we are creating the key or a public key using "ssh-keygen" so it will create a key that is used in password less authentication 

ls /home/ubuntu/.ssh/
they u will get one private and one publi key we need to share only the public key while we access the other servers 
for that lets go ls /home/ubuntu/.ssh/id_rsa.pub they u will get the public u need to share that with another srevre

the prerequesite of ansible is password less authentication
for that for that i created two server in one server i installed ansible and i created target server and what i am doimg is i am i logged into my target server using the ansible server by just few steps that is
first open the target server in other tab and then 
ssh-keygen it will create the authorized keys 
then vim~/.ssh.authorized-keys
in that paste the key that which is u copied from the ansible server that public key in target server then save it 

go to your ansible server copy the private ip address of the target server the 
ssh "ip-address" 
then miracle u will be able to see without any password u logged into the target server

ansible playbook its like in python we will call python file as like while writing anyscript in ansiblw we will call it as ansible playbook 

ansible adhoc commands

lets say inventory file i we have 100's of ip-address and we will store it in inventory file and then we will run 
ansible -i inventory all or if we have one ip-address name will go for ansible -i inventory "ip-address"

now create a inventory file in the main server and save the private ip address of the atrget server and use the command   ansible -i inventory all -m "shell" -a "touch devopsclass"  enetr this in the main server 
and magic u will see that the devopsclass file os created in the target server

 ansible-playbook -i inventory ansible_playbook.yml
---
- name: Install and start nginx
  hosts: all
  become: true
  tasks:
    - name: Install nginx
      apt:
        name: nginx
        state: present
    - name: Start nginx
      service:
        name: nginx
        state: started


 ansible-playbook -vvv -i inventory ansible_playbook.yml
this command is used to see how does the main server using playbook yaml script to do the certain task in the target server
